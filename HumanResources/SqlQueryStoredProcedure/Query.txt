IF OBJECT_ID('dbo.sp_GetProjectPerformanceReport', 'P') IS NOT NULL
    DROP PROCEDURE dbo.sp_GetProjectPerformanceReport;
GO


-- Passo 2: Cria a procedure de novo com a lógica mais recente.
CREATE PROCEDURE [dbo].[sp_GetProjectPerformanceReport]
    -- Parâmetros opcionais para os filtros
    @ClientId INT = NULL,
    @SearchString NVARCHAR(150) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    SELECT
        p.ProjectId,
        p.ProjectName,
        cl.CompanyName AS Cliente,
        p.Budget AS Orcamento,
        SUM(c.Value) AS CustoReal,
        CAST(DATEDIFF(day, p.StartDate, p.DueDate) AS INT) AS TempoTotalPrevisto,
        CAST(SUM(ec.durationInDays) as int) AS TempoTotalDespendido,
        CAST(COUNT(ec.EmployeeContractId) AS INT) AS TotalFuncionarios,
        p.[Status]
    FROM
        dbo.Projects p
    LEFT JOIN
        dbo.Contracts c ON p.ProjectId = c.ProjectId
    LEFT JOIN
        dbo.EmployeeContracts ec ON ec.ContractId = c.ContractId
    LEFT JOIN
        dbo.Clients cl ON p.ClientId = cl.Id
    WHERE
        -- Lógica para aplicar os filtros apenas se forem fornecidos
        (@ClientId IS NULL OR p.ClientId = @ClientId)
        AND
        (@SearchString IS NULL OR p.ProjectName LIKE '%' + @SearchString + '%')
    GROUP BY
        p.ProjectId, p.ProjectName, p.Budget, p.StartDate, p.DueDate, p.Status, cl.CompanyName
    ORDER BY
        p.ProjectName;
END