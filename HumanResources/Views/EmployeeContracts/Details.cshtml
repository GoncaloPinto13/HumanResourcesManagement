@model HumanResources.Models.Employee

@{
    ViewData["Title"] = "Detalhes do Funcionário";
}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Dados Pessoais e de Acesso</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Position)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.Position)</dd>

        <dt class="col-sm-3">Email de Login</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.User.Email)</dd>

        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.SpecializationArea)</dt>
        <dd class="col-sm-9">@Html.DisplayFor(model => model.SpecializationArea)</dd>
    </dl>
</div>

<!-- Secção para mostrar os projetos associados -->
<div class="mt-4">
    <h4>Projetos Associados (@Model.Projects.Count())</h4>
    <hr />
    @if (Model.Projects.Any())
    {
        <ul class="list-group">
            @foreach (var project in Model.Projects)
            {
                <li class="list-group-item">@project.ProjectName</li>
            }
        </ul>
    }
    else
    {
        <p>Este funcionário não está associado a nenhum projeto de momento.</p>
    }
</div>

<div class="mt-4">
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Editar</a> |
    <a asp-action="Index" class="btn btn-secondary">Voltar à Lista</a>
</div>

